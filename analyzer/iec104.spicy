# TODO: Define your analyzer here.

module iec104;

import spicy;


%byte-order = spicy::ByteOrder::Little;

type Modes = enum {
    I = 0,
    S = 1,
    U = 3
};

type info_obj_code = enum {
    # Process information in monitoring direction:
    M_SP_NA_1 = 1,
    M_SP_TA_1 = 2,
    M_DP_NA_1 = 3,
    M_DP_TA_1 = 4,
    M_ST_NA_1 = 5,
    M_ST_TA_1 = 6,
    M_BO_NA_1 = 7,
    M_BO_TA_1 = 8,
    M_ME_NA_1 = 9,
    M_ME_TA_1 = 10,
    M_ME_NB_1 = 11,
    M_ME_TB_1 = 12,
    M_ME_NC_1 = 13,
    M_ME_TC_1 = 14,
    M_IT_NA_1 = 15,
    M_IT_TA_1 = 16,
    M_EP_TA_1 = 17,
    M_EP_TB_1 = 18,
    M_EP_TC_1 = 19,
    M_PS_NA_1 = 20,
    M_ME_ND_1 = 21,
    # The 22-29 do not exist or are reserved?
    # Process telegrams with long time tag
    M_SP_TB_1 = 30,
    M_DP_TB_1 = 31,
    M_ST_TB_1 = 32,
    M_BO_TB_1 = 33,
    M_ME_TD_1 = 34,
    M_ME_TE_1 = 35,
    M_ME_TF_1 = 36,
    M_IT_TB_1 = 37,
    M_EP_TD_1 = 38,
    M_EP_TE_1 = 39,
    M_EP_TF_1 = 40,
    # The 41-44 do not exist or are reserved?
    # Process information in control direction:
    C_SC_NA_1 = 45,
    C_DC_NA_1 = 46,
    C_RC_NA_1 = 47,
    C_SE_NA_1 = 48,
    C_SE_NB_1 = 49,
    C_SE_NC_1 = 50,
    C_BO_NA_1 = 51,
    # 52-57 do not exist or are reserved?
    # Command telegrams with long time tag
    C_SC_TA_1 = 58,
    C_DC_TA_1 = 59,
    C_RC_TA_1 = 60,
    C_SE_TA_1 = 61,
    C_SE_TB_1 = 62,
    C_SE_TC_1 = 63,
    C_BO_TA_1 = 64,
    # 65-69 do not exist or are reserved?
    # System information in monitor direction:
    M_EI_NA_1 = 70,
    # The 71-99 do not exist or are reserved?
    # System information in control direction:
    C_IC_NA_1 = 100,
    C_CI_NA_1 = 101,
    C_RD_NA_1 = 102,
    C_CS_NA_1 = 103,
    C_TS_NA_1 = 104,
    # C_RP_NC_1 = 105,
    C_RP_NA_1 = 105, # BECKOFF, also the Go implementation.
    C_CD_NA_1 = 106,
    C_TS_TA_1 = 107,
    # The 108-109 do not exist or are reserved?
    # Parameter in control direction:
    P_ME_NA_1 = 110,
    P_ME_NB_1 = 111,
    P_ME_NC_1 = 112,
    P_AC_NA_1 = 113,
    # 114-119 do not exist or are reserved?
    # File transfer:
    F_FR_NA_1 = 120,
    F_SR_NA_1 = 121,
    F_SC_NA_1 = 122,
    F_LS_NA_1 = 123,
    F_AF_NA_1 = 124,
    F_SG_NA_1 = 125,
    F_DR_TA_1 = 126,
    F_SC_NB_1 = 127
};

type cause_tx_code = enum {
    per_cyc = 1,
    back = 2,
    spont = 3,
    init  = 4,
    req = 5,
    act = 6,
    actcon = 7,
    deact = 8,
    deactcon = 9,
    actterm = 10,
    retrem = 11,
    retloc = 12,
    file_data_trans = 13, # Using this convention since "file" is already reserved
    # The 14â€“19 are reserved for future compatible definitions
    inrogen = 20,
    inro1 = 21,
    inro2 = 22,
    inro3 = 23,
    inro4 = 24,
    inro5 = 25,
    inro6 = 26,
    inro7 = 27,
    inro8 = 28,
    inro9 = 29,
    inro10 = 30,
    inro11 = 31,
    inro12 = 32,
    inro13 = 33,
    inro14 = 34,
    inro15 = 35,
    inro16 = 36,
    reqcogen = 37,
    reqco1 = 38,
    reqco2 = 39,
    reqco3 = 40,
    reqco4 = 41,
    reqco5 = 42,
    reqco6 = 43,
    uknown_type = 44,
    uknown_cause = 45,
    unknown_asdu_address = 46,
    unknown_object_address = 47
};

#type QOS_type = bitfield(8) {
#    ql: 0..6;
#    se: 7;
#};

type SIQ = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    siq: bitfield(8) {
        spi: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
};

type DIQ = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    diq: bitfield(8) {
        dpi: 0..1;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
};

#type SIQ = bitfield(8) {
#        spi: 0;
#        bl: 4;
#        sb: 5;
#        nt: 6;
#        iv: 7;
#};

type NVA_QOS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    NVA: uint16;
    qos: bitfield(8) {
        ql: 0..6;
        se: 7;
    };
};

type NVA_QDS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    NVA: uint16;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
};

type BSI_QDS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    bsi: uint32;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
};

type SVA_QOS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    SVA: uint16;
    qos: bitfield(8) {
        ql: 0..6;
        se: 7;
    };
};

type SVA_QDS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    SVA: uint16;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
};

type IEEE_754_QOS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    value: real &type=spicy::RealType::IEEE754_Single;
    qos: bitfield(8) {
        ql: 0..6;
        se: 7;
    };
};


type IEEE_754_QDS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    value: uint32;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
};

type VTI_QDS = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    value: uint8;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
};

type CP56TIME2A = unit {
    milli: uint16;
    #minute: uint8;
    minute: bitfield(8) {
        mins: 0..6;
        iv: 7;
    };
    #hour: uint8;
    hour: bitfield(8) {
        hours: 0..6;
        su: 7;
    };
    #day: uint8;
    day_dow: bitfield(8) {
        day: 0..4;
        day_of_week: 5..7;
    };
    mon: uint8;
    year: uint8;
};

type CP24TIME2A = unit {
    milli: uint16;
    minute: bitfield(8) {
        mins: 0..6;
        iv: 7;
    };
};

type SIQ_CP56Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    siq: bitfield(8) {
        spi: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP56Time2a: CP56TIME2A;
};

type SIQ_CP24Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    siq: bitfield(8) {
        spi: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP24Time2a: CP24TIME2A;
};

type DIQ_CP56Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    diq: bitfield(8) {
        dpi: 0..1;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP56Time2a: CP56TIME2A;
};

type DIQ_CP24Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    diq: bitfield(8) {
        dpi: 0..1;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP24Time2a: CP24TIME2A;
};

type VTI_QDS_CP56Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    value: uint8;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP56Time2a: CP56TIME2A;
};

type VTI_QDS_CP24Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    value: uint8;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP24Time2a: CP24TIME2A;
};

type BSI_QDS_CP56Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    bsi: uint32;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP56Time2a: CP56TIME2A;
};

type BSI_QDS_CP24Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    bsi: uint32;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP24Time2a: CP24TIME2A;
};

type SCO = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    sco: bitfield(8) {
        sco_on: 0;
        qu: 2..6;
        se: 7;
    };
};

type DCO = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    dco: bitfield(8) {
        dco_on: 0..1;
        qu: 2..6;
        se: 7;
    };
};

type RCO = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    rco: bitfield(8) {
        up_down: 0..1;
        qu: 2..6;
        se: 7;
    };
};

type BSI = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    bsi: bitfield(32) {
        value: 0..31;
    };
};

type QOI = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    qoi: uint8;
};

type COI = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    coi: bitfield(8) {
        r: 0..6;
        i: 7;
    };
};

type NVA_QDS_CP56Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    NVA: uint16;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP56Time2a: CP56TIME2A;
};

type NVA_QDS_CP24Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    NVA: uint16;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP24Time2a: CP24TIME2A;
};

type SVA_QDS_CP56Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    SVA: uint16;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP56Time2a: CP56TIME2A;
};

type SVA_QDS_CP24Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    SVA: uint16;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP24Time2a: CP24TIME2A;
};

type IEEE_754_QDS_CP56Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    value: uint32;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP56Time2a: CP56TIME2A;
};

type IEEE_754_QDS_CP24Time2a = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    value: uint32;
    qds: bitfield(8) {
        ov: 0;
        bl: 4;
        sb: 5;
        nt: 6;
        iv: 7;
    };
    CP24Time2a: CP24TIME2A;
};

type Read_Command = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
};

type QRP = unit {
    info_obj_addr: bytes &size=3 &convert=$$.to_uint(spicy::ByteOrder::Little);
    raw_data: uint8;
};

type Apci_i = unit {
    on %error { self.backtrack(); }

    : bitfield(32) {
      tag: 0 = 0;
      ssn: 1..15;
      unused: 16 = 0;
      rsn: 17..31;
    };
    asdu: Asdu;
};

type Apci_s = unit {
    on %error { self.backtrack(); }

    : bitfield(32) {
      tag: 0..1 = 1;
      unused: 2..16 = 0;
      rsn: 17..31;
    };
};

type Apci_u = unit {
    on %error { self.backtrack(); }

    : bitfield(32) {
      tag: 0..1 = 3;
      startdt: 2..3;
      stopdt: 4..5;
      testfr: 6..7;
      zeroes: 8..31 = 0;
    };
};

public type Apcis = unit {
    %port = 2404/tcp &originator;
    : (Apci &synchronize)[];
};

public type Apci = unit {
    : int8(0x68);
    apduLen: uint8;
    # FIXME: Check that the size of payload matches apduLen.
    #
    # TODO: apduLen must be at least 4.
    apci_i: Apci_i &try;
    apci_s: Apci_s &try;
    apci_u: Apci_u &try;
};

type Asdu = unit {
    info_obj_type: uint8 &convert=info_obj_code($$);
    data_unit_identifier: bitfield (8) {
        num_ix: 0..6;
        seq: 7;
    };
    cause_of_transmission: bitfield (8) {
        # TODO: Needs to be mapped/converted to some causes strings (enum?)
        #cause_tx: 0..5;
        cause_tx: 0..5 &convert=cause_tx_code($$);
        negative: 6;
        test: 7;
    };
    originator_address: uint8;
    common_address: uint16;

    switch (self.info_obj_type) {
        info_obj_code::C_IC_NA_1 -> qoi: QOI()[self.data_unit_identifier.num_ix];
        info_obj_code::C_SC_NA_1 -> sco: SCO()[self.data_unit_identifier.num_ix];
        info_obj_code::C_DC_NA_1 -> dco: DCO()[self.data_unit_identifier.num_ix];
        info_obj_code::C_RC_NA_1 -> rco: RCO()[self.data_unit_identifier.num_ix];
        info_obj_code::C_BO_NA_1 -> bsi: BSI()[self.data_unit_identifier.num_ix];
        info_obj_code::C_SE_NA_1 -> nva_qos: NVA_QOS()[self.data_unit_identifier.num_ix];
        info_obj_code::C_SE_NB_1 -> sva_qos: SVA_QOS()[self.data_unit_identifier.num_ix];
        info_obj_code::C_SE_NC_1 -> ieee_754_qos: IEEE_754_QOS()[self.data_unit_identifier.num_ix];
        info_obj_code::M_EI_NA_1 -> coi: COI()[self.data_unit_identifier.num_ix];
        info_obj_code::M_SP_NA_1 -> siq: SIQ()[self.data_unit_identifier.num_ix];
        info_obj_code::M_DP_NA_1 -> diq: DIQ()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ST_NA_1 -> vti_qds: VTI_QDS()[self.data_unit_identifier.num_ix];
        info_obj_code::M_BO_NA_1 -> bsi_qds: BSI_QDS()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_NA_1 -> nva_qds: NVA_QDS()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_NB_1 -> sva_qds: SVA_QDS()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_NC_1 -> ieee_754_qds: IEEE_754_QDS()[self.data_unit_identifier.num_ix];
        info_obj_code::M_SP_TB_1 -> siq_CP56Time2a: SIQ_CP56Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_SP_TA_1 -> siq_CP24Time2a: SIQ_CP24Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_DP_TB_1 -> diq_CP56Time2a: DIQ_CP56Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_DP_TA_1 -> diq_CP24Time2a: DIQ_CP24Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ST_TB_1 -> vti_qds_CP56Time2a: VTI_QDS_CP56Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ST_TA_1 -> vti_qds_CP24Time2a: VTI_QDS_CP24Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_BO_TB_1 -> bsi_qds_CP56Time2a: BSI_QDS_CP56Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_BO_TA_1 -> bsi_qds_CP24Time2a: BSI_QDS_CP24Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_TD_1 -> nva_qds_CP56Time2a: NVA_QDS_CP56Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_TA_1 -> nva_qds_CP24Time2a: NVA_QDS_CP24Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_TE_1 -> sva_qds_CP56Time2a: SVA_QDS_CP56Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_TB_1 -> sva_qds_CP24Time2a: SVA_QDS_CP24Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_TF_1 -> ieee_754_qds_CP56Time2a: IEEE_754_QDS_CP56Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::M_ME_TC_1 -> ieee_754_qds_CP24Time2a: IEEE_754_QDS_CP24Time2a()[self.data_unit_identifier.num_ix];
        info_obj_code::C_RD_NA_1 -> read_command: Read_Command()[self.data_unit_identifier.num_ix];
        info_obj_code::C_RP_NA_1 -> qrp: QRP()[self.data_unit_identifier.num_ix];
    };

    # TODO: We have to specify the rest here of fields based on info_obj_type
};

public function QOI_ret (asdu: QOI): tuple <uint64, uint64, uint8> {
    return (0, asdu.info_obj_addr, asdu.qoi);
}

public function SIQ_ret (asdu: SIQ): tuple<uint64, uint64, tuple<spi: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>> {
    local temp_spi = asdu.siq.spi;
    local temp_bl = asdu.siq.bl;
    local temp_sb = asdu.siq.sb;
    local temp_nt = asdu.siq.nt;
    local temp_iv = asdu.siq.iv;

    local siq_tuple = (temp_spi, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, siq_tuple);
}

public function SCO_ret (asdu: SCO) :tuple<uint64, uint64, tuple<sco_on: uint8, qu: uint8, se: uint8>> {
    local temp_sco_on = asdu.sco.sco_on;
    local temp_qu = asdu.sco.qu;
    local temp_se = asdu.sco.se;

    local sco_tuple = (temp_sco_on, temp_qu, temp_se);

    return (0, asdu.info_obj_addr, sco_tuple);
}

public function DCO_ret (asdu: DCO) :tuple<uint64, uint64, tuple<dco_on: uint8, qu: uint8, se: uint8>> {
    local temp_dco_on = asdu.dco.dco_on;
    local temp_qu = asdu.dco.qu;
    local temp_se = asdu.dco.se;

    local dco_tuple = (temp_dco_on, temp_qu, temp_se);

    return (0, asdu.info_obj_addr, dco_tuple);
}

public function RCO_ret (asdu: RCO) :tuple<uint64, uint64, tuple<up_down: uint8, qu: uint8, se: uint8>> {

    local temp_up_down = asdu.rco.up_down;
    local temp_qu = asdu.rco.qu;
    local temp_se = asdu.rco.se;

    local rco_tuple = (temp_up_down, temp_qu, temp_se);

    return (0, asdu.info_obj_addr, rco_tuple);
}

public function BSI_ret (asdu: BSI) :tuple<uint64, uint64, uint32> {

    local value = asdu.bsi.value;

    #local bsi_tuple = (value);

    return (0, asdu.info_obj_addr, value);
}

public function SVA_QOS_ret (asdu: SVA_QOS) :tuple<uint64, uint64, uint64, tuple<ql: uint8, se: uint8>> {

    local temp_ql = asdu.qos.ql;
    local temp_se = asdu.qos.se;

    local qos_tuple = (temp_ql, temp_se);

    return (0, asdu.info_obj_addr, asdu.SVA, qos_tuple);
}

public function SVA_QDS_ret (asdu: SVA_QDS) :tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.SVA, qds_tuple);
}

public function IEEE_754_QOS_ret (asdu: IEEE_754_QOS): tuple<uint64, uint64, real, tuple<ql: uint8, se: uint8>> {
    local temp_ql = asdu.qos.ql;
    local temp_se = asdu.qos.se;

    local qos_tuple = (temp_ql, temp_se);

    return (0, asdu.info_obj_addr, asdu.value, qos_tuple);
}

public function IEEE_754_QDS_ret (asdu: IEEE_754_QDS): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.value, qds_tuple);
}

public function VTI_QDS_ret (asdu: VTI_QDS): tuple<uint64, uint64, uint8, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>> {

    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.value, qds_tuple);
}

#public function SIQ_CP56Time2a_ret (asdu: SIQ_CP56Time2a): tuple<uint64, uint64, tuple<spi: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {
#    return (0, asdu.info_obj_addr, asdu.siq ,asdu.CP56Time2a);
#}

public function SIQ_CP56Time2a_ret (asdu: SIQ_CP56Time2a): tuple<uint64, uint64, tuple<spi: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {
    local temp_spi = asdu.siq.spi;
    local temp_bl = asdu.siq.bl;
    local temp_sb = asdu.siq.sb;
    local temp_nt = asdu.siq.nt;
    local temp_iv = asdu.siq.iv;

    local siq_tuple = (temp_spi, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, siq_tuple, asdu.CP56Time2a);
}

public function SIQ_CP24Time2a_ret (asdu: SIQ_CP24Time2a): tuple<uint64, uint64, tuple<spi: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP24TIME2A> {
    local temp_spi = asdu.siq.spi;
    local temp_bl = asdu.siq.bl;
    local temp_sb = asdu.siq.sb;
    local temp_nt = asdu.siq.nt;
    local temp_iv = asdu.siq.iv;

    local siq_tuple = (temp_spi, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, siq_tuple ,asdu.CP24Time2a);
}

public function DIQ_CP56Time2a_ret (asdu: DIQ_CP56Time2a): tuple<uint64, uint64, uint64, tuple<dpi: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {

    local temp_dpi = asdu.diq.dpi;
    local temp_bl = asdu.diq.bl;
    local temp_sb = asdu.diq.sb;
    local temp_nt = asdu.diq.nt;
    local temp_iv = asdu.diq.iv;

    local diq_tuple = (temp_dpi, temp_bl, temp_sb, temp_nt, temp_iv);
    return (0, 31 ,asdu.info_obj_addr, diq_tuple ,asdu.CP56Time2a);

}

public function DIQ_CP24Time2a_ret (asdu: DIQ_CP24Time2a): tuple<uint64, uint64, tuple<dpi: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP24TIME2A> {
    local temp_dpi = asdu.diq.dpi;
    local temp_bl = asdu.diq.bl;
    local temp_sb = asdu.diq.sb;
    local temp_nt = asdu.diq.nt;
    local temp_iv = asdu.diq.iv;

    local diq_tuple = (temp_dpi, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, diq_tuple ,asdu.CP24Time2a);
}

public function VTI_QDS_CP56Time2a_ret (asdu: VTI_QDS_CP56Time2a): tuple<uint64, uint64, uint8, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.value, qds_tuple, asdu.CP56Time2a);
}

public function VTI_QDS_CP24Time2a_ret (asdu: VTI_QDS_CP24Time2a): tuple<uint64, uint64, uint8, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP24TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.value, qds_tuple, asdu.CP24Time2a);
}

public function BSI_QDS_ret (asdu: BSI_QDS): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.bsi, qds_tuple);
}

public function BSI_QDS_CP56Time2a_ret (asdu: BSI_QDS_CP56Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.bsi, qds_tuple, asdu.CP56Time2a);
}

public function BSI_QDS_CP24Time2a_ret (asdu: BSI_QDS_CP24Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP24TIME2A> {

    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.bsi, qds_tuple, asdu.CP24Time2a);
}

public function COI_ret (asdu: COI): tuple<uint64, uint64, tuple<r: uint8, i: uint8>> {
    # local temp_r = asdu.coi.r;
    # local temp_i = asdu.coi.i;

    local coi_tuple = (asdu.coi.r, asdu.coi.i);

    return (0, asdu.info_obj_addr, coi_tuple);
}

public function NVA_QDS_CP56Time2a_ret (asdu: NVA_QDS_CP56Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {
    # local temp_ov = asdu.qds.ov;
    # local temp_bl = asdu.qds.bl;
    # local temp_sb = asdu.qds.sb;
    # local temp_nt = asdu.qds.nt;
    # local temp_iv = asdu.qds.iv;

    local qds_tuple = (asdu.qds.ov, asdu.qds.bl, asdu.qds.sb, asdu.qds.nt, asdu.qds.iv);

    return (0, asdu.info_obj_addr, asdu.NVA, qds_tuple, asdu.CP56Time2a);
}

public function NVA_QDS_CP24Time2a_ret (asdu: NVA_QDS_CP24Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP24TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.NVA, qds_tuple, asdu.CP24Time2a);
}

public function SVA_QDS_CP56Time2a_ret (asdu: SVA_QDS_CP56Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.SVA, qds_tuple, asdu.CP56Time2a);
}

public function SVA_QDS_CP24Time2a_ret (asdu: SVA_QDS_CP24Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP24TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.SVA, qds_tuple, asdu.CP24Time2a);
}

public function IEEE_754_QDS_CP56Time2a_ret (asdu: IEEE_754_QDS_CP56Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP56TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.value, qds_tuple, asdu.CP56Time2a);
}

public function IEEE_754_QDS_CP24Time2a_ret (asdu: IEEE_754_QDS_CP24Time2a): tuple<uint64, uint64, uint64, tuple<ov: uint8, bl: uint8, sb: uint8, nt: uint8, iv: uint8>, CP24TIME2A> {
    local temp_ov = asdu.qds.ov;
    local temp_bl = asdu.qds.bl;
    local temp_sb = asdu.qds.sb;
    local temp_nt = asdu.qds.nt;
    local temp_iv = asdu.qds.iv;

    local qds_tuple = (temp_ov, temp_bl, temp_sb, temp_nt, temp_iv);

    return (0, asdu.info_obj_addr, asdu.value, qds_tuple, asdu.CP24Time2a);
}

public function Read_Command_ret (asdu: Read_Command): tuple<uint64, uint64> {
    return (0, asdu.info_obj_addr);
}

public function QRP_ret (asdu: QRP): tuple<uint64, uint64, uint8> {
    return (0, asdu.info_obj_addr, asdu.raw_data);
}
